version: '3.7'

services:
  app:
    build: ./app
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./app:/app
    ports:
      - '8000:8000'
    env_file:
      - ./app/.env.dev
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
    depends_on:
      - app-db
      - redis
  redis:
    image: redis:alpine
  celery:
    build: ./app
    command: celery -A app worker -l info
    volumes:
      - ./app:/app
    env_file:
      - ./app/.env.dev
    depends_on:
      - redis
  celery-beat:
    build: ./app
    command: celery -A app beat -l info
    volumes:
      - ./app:/app
    env_file:
      - ./app/.env.dev
    depends_on:
      - redis
  app-db:
    image: postgres:12-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/

    environment:
      - POSTGRES_USER=tracker
      - POSTGRES_PASSWORD=tracker
      - POSTGRES_DB=tracker_dev
      - USE_S3=TRUE

volumes:
  postgres_data:
